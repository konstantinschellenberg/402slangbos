# save indizes' name
indizesnames = names(data)
print(indizesnames)
# concat axis literates
uppercase = casefold(indizesnames, upper = T)
index_axis = paste("S-2", uppercase, "index")
index_axis
proper_layernames
s.plt5 = function(data){
plots5 = pmap(list(data, proper_layernames, ranges.all), function(data, layr_names, range){
plt.classwise = pmap(list(data, classes.fmt.slim, classes.fmt, classnames), function(x, classes.fmt.slim, classes.fmt, classnames){
plot_ly() %>%
add_lines(data = x, x ~ date, y ~ med_smooth, name = classnames, line = classes.fmt, showlegend = TRUE) %>%
add_ribbons(data = x, x ~ date, ymin ~ losd_smooth, ymax ~ upsd_smooth, line = list(width = 0),
color = I(classes.fmt$color), opacity = 0.3, showlegend = F) %>%
layout(title = layr_names,
yaxis = c(y.s1, range = range))
})
plt.classwise[[1]]
# now create facet grid
subplot(plt.classwise, nrows = length(plt.classwise), shareX = TRUE)
})
}
plots5 = s.plt5(summary)
plots5[[1]]
s.plt5 = function(data){
plots5 = pmap(list(data, proper_layernames, ranges.all), function(data, layr_names, range){
plt.classwise = pmap(list(data, classes.fmt.slim, classes.fmt, classnames), function(x, classes.fmt.slim, classes.fmt, classnames){
plot_ly() %>%
add_lines(data = x, x ~ date, y ~ med_smooth, name = classnames, line = classes.fmt, showlegend = TRUE) %>%
add_ribbons(data = x, x ~ date, ymin ~ losd_smooth, ymax ~ upsd_smooth, line = list(width = 0),
color = I(classes.fmt$color), opacity = 0.3, showlegend = F) %>%
layout(title = layr_names,
yaxis = c(y.s1, range = range))
})
plt.classwise[[1]]
# now create facet grid
subplot(plt.classwise, nrows = length(plt.classwise), shareX = TRUE)
})
return(plots5)
}
plots5 = s.plt5(summary)
plots5[[1]]
plots6 = pmap(list(summary, proper_layernames, ranges.all), function(data, layr_names, range){
# stack lines up
plt = plot_ly(width = 700, height = 500)
for (i in seq_along(classnames)){
plt = add_lines(plt, data = data[[i]], x ~ date, y ~ med_smooth, name = classnames[i], line = classes.fmt.slim[[i]], showlegend = TRUE)
}
plt = plt %>%
layout(title = layr_names,
yaxis = c(y.s1, range = range),
xaxis = date.axis,
legend = list(font = f1, orientation = "h", xanchor = "center", yanchor = "bottom", y = -0.7, x = 0.5),
margin = list(pad = 0, b = 200, l = 0, r = 100, automargin = TRUE))
})
plots6[[2]]
# VH in comparison with S2 indizes
s.plt4 = function(vh, indizes, classnames){
# INFO:
# indizes are a list of index data.frames
# save indizes' name
indizesnames = names(indizes)
print(indizesnames)
# concat axis literates
uppercase = casefold(indizesnames, upper = T)
index_axis = paste("S-2", uppercase, "index")
# iterate over indizes
pmap(list(indizes, index_axis, ranges), function(index, i_names, ranges){
print(i_names)
# iterate over classes
pmap(list(vh, index, classnames), function(vh, index, classnames){
print(classnames)
plot_ly() %>%
add_lines(data = vh, x = ~ date, y = ~ med_smooth,
yaxis = "y1", name = "S-1 VH backscatter smoothed", line = vh.fmt) %>%
add_lines(data = index, x = ~ date, y = ~ med_smooth,
yaxis = "y2", name = paste(i_names, "smoothed"), line = ndvi.fmt,
connectgaps = F) %>%
add_ribbons(data = vh, x = ~date, ymin = ~losd_smooth, ymax = ~upsd_smooth,
yaxis = "y1", name = "S-1 VH standard deviation range (1 sigma)",
color = I(blue_background), line = list(width = 1), opacity = 0.3,
showlegend = T) %>%
add_ribbons(data = index, x = ~date, ymin = ~losd_smooth, ymax = ~upsd_smooth,
yaxis = "y2", name = paste(i_names, "standard deviation range (1 sigma)"),
color = I(red_background), line = list(width = 1), opacity = 0.3,
showlegend = T) %>%
layout(xaxis = date.axis,
yaxis = c(y.s1, range = ranges.all$vh),
yaxis2 = c(y.indizes, range = ranges, title = i_names),
legend = list(font = f1, orientation = "h", xanchor = "center", yanchor = "bottom", y = -0.7, x = 0.5),
margin = list(pad = 0, b = 200, l = 0, r = 100, automargin = TRUE),
title = classnames)
})
}
# GO
plots4 = s.plt4(summary[["vh"]], indizes = indizes, classnames)
map(plots4[[1]], ~ print(.x))
# map(plots4[[1]], ~ print(.x))
plots4[[1]][[2]]
y.s1
yaxis = y.s1
yaxis
proper_layernames
proper_layernames.axis = c("S-1 VH [dB]", "S-1 VV [dB]", "S-1 VV Coherence", "S-2 DVI Index", "S-2 EVI Index",
"S-2 MSAVI Index", "S-2 NDVI Index", "S-2 REIP Index", "S-2 RVI Index")
plots6 = pmap(list(summary, proper_layernames, proper_layernames.axis, ranges.all),
function(data, layr_names, proper_layernames.axis, range){
yaxis = y.s1
yaxis$title$text = proper_layernames.axis
yaxis = c(yaxis, range = range)
# stack lines up
plt = plot_ly(width = 700, height = 500)
for (i in seq_along(classnames)){
plt = add_lines(plt, data = data[[i]], x ~ date, y ~ med_smooth, name = classnames[i], line = classes.fmt.slim[[i]], showlegend = TRUE)
}
plt = plt %>%
layout(title = layr_names,
yaxis = c(y.s1, range = range),
xaxis = date.axis,
legend = list(font = f1, orientation = "h", xanchor = "center", yanchor = "bottom", y = -0.7, x = 0.5),
margin = list(pad = 0, b = 200, l = 0, r = 100, automargin = TRUE))
})
plots6[[2]]
plots6[[3]]
yaxis
yaxis = y.s1
yaxis$title$text = proper_layernames.axis
yaxis = c(yaxis, range = range)
yaxis
plots6 = pmap(list(summary, proper_layernames, proper_layernames.axis, ranges.all),
function(data, layr_names, proper_layernames.axis, ranges.all){
yaxis = y.s1
yaxis$title$text = proper_layernames.axis
yaxis = c(yaxis, range = ranges.all)
# stack lines up
plt = plot_ly(width = 700, height = 500)
for (i in seq_along(classnames)){
plt = add_lines(plt, data = data[[i]], x ~ date, y ~ med_smooth, name = classnames[i], line = classes.fmt.slim[[i]], showlegend = TRUE)
}
plt = plt %>%
layout(title = layr_names,
yaxis = yaxis,
xaxis = date.axis,
legend = list(font = f1, orientation = "h", xanchor = "center", yanchor = "bottom", y = -0.7, x = 0.5),
margin = list(pad = 0, b = 200, l = 0, r = 100, automargin = TRUE))
})
plots6[[3]]
plots6[[4]]
plots6[[5]]
# save plots
walk2(plots6, proper_layernames, ~ plotly::orca(.x, file = paste0(plotdir, "Sensors/", .y, ".png"), scale = 3))
walk2(plots6, proper_layernames, ~ htmlwidgets::saveWidget(widget = .x, file = paste0(.y, ".html"), selfcontained = TRUE))
classes.fmt.slim = map(c(increase = "#ff0040", continuous = "#FF5A00", clearing = "black",
grass = "#009933", agro = "#bf8040"), ~ list(dash="solid", width = 1.2, color = .x))
plots6 = pmap(list(summary, proper_layernames, proper_layernames.axis, ranges.all),
function(data, layr_names, proper_layernames.axis, ranges.all){
yaxis = y.s1
yaxis$title$text = proper_layernames.axis
yaxis = c(yaxis, range = ranges.all)
# stack lines up
plt = plot_ly(width = 700, height = 500)
for (i in seq_along(classnames)){
plt = add_lines(plt, data = data[[i]], x ~ date, y ~ med_smooth, name = classnames[i], line = classes.fmt.slim[[i]], showlegend = TRUE)
}
plt = plt %>%
layout(title = layr_names,
yaxis = yaxis,
xaxis = date.axis,
legend = list(font = f1, orientation = "h", xanchor = "center", yanchor = "bottom", y = -0.7, x = 0.5),
margin = list(pad = 0, b = 200, l = 0, r = 100, automargin = TRUE))
})
plots6[[5]]
classes.fmt.slim = map(c(increase = "#ff0040", continuous = "#FF5A00", clearing = "black",
grass = "#009933", agro = "#bf8040"), ~ list(dash="solid", width = 1.5, color = .x))
classes.fmt.slim$grass$dash = "dash"; classes.fmt.slim$agro$dash = "dash"
classes.fmt.slim = map(c(increase = "#ff0040", continuous = "#D9CB00", clearing = "black",
grass = "#009933", agro = "#bf8040"), ~ list(dash="solid", width = 1.5, color = .x))
classes.fmt.slim$grass$dash = "dash"; classes.fmt.slim$agro$dash = "dash"
plots6 = pmap(list(summary, proper_layernames, proper_layernames.axis, ranges.all),
function(data, layr_names, proper_layernames.axis, ranges.all){
yaxis = y.s1
yaxis$title$text = proper_layernames.axis
yaxis = c(yaxis, range = ranges.all)
# stack lines up
plt = plot_ly(width = 700, height = 500)
for (i in seq_along(classnames)){
plt = add_lines(plt, data = data[[i]], x ~ date, y ~ med_smooth, name = classnames[i], line = classes.fmt.slim[[i]], showlegend = TRUE)
}
plt = plt %>%
layout(title = layr_names,
yaxis = yaxis,
xaxis = date.axis,
legend = list(font = f1, orientation = "h", xanchor = "center", yanchor = "bottom", y = -0.7, x = 0.5),
margin = list(pad = 0, b = 200, l = 0, r = 100, automargin = TRUE))
})
plots6[[5]]
seq_along(classnames)
?seq_along
length(classnames):1
plots6 = pmap(list(summary, proper_layernames, proper_layernames.axis, ranges.all),
function(data, layr_names, proper_layernames.axis, ranges.all){
yaxis = y.s1
yaxis$title$text = proper_layernames.axis
yaxis = c(yaxis, range = ranges.all)
# stack lines up
plt = plot_ly(width = 700, height = 500)
for (i in length(classnames):1){
plt = add_lines(plt, data = data[[i]], x ~ date, y ~ med_smooth, name = classnames[i], line = classes.fmt.slim[[i]], showlegend = TRUE)
}
plt = plt %>%
layout(title = layr_names,
yaxis = yaxis,
xaxis = date.axis,
legend = list(font = f1, orientation = "h", xanchor = "center", yanchor = "bottom", y = -0.7, x = 0.5),
margin = list(pad = 0, b = 200, l = 0, r = 100, automargin = TRUE))
})
plots6[[5]]
classes.fmt.slim = map(c(increase = "#ff0040", continuous = "#fd8d3c", clearing = "black",
grass = "#009933", agro = "#bf8040"), ~ list(dash="solid", width = 1.5, color = .x))
classes.fmt.slim$grass$dash = "dash"; classes.fmt.slim$agro$dash = "dash"
plots6 = pmap(list(summary, proper_layernames, proper_layernames.axis, ranges.all),
function(data, layr_names, proper_layernames.axis, ranges.all){
yaxis = y.s1
yaxis$title$text = proper_layernames.axis
yaxis = c(yaxis, range = ranges.all)
# stack lines up
plt = plot_ly(width = 700, height = 500)
for (i in length(classnames):1){
plt = add_lines(plt, data = data[[i]], x ~ date, y ~ med_smooth, name = classnames[i], line = classes.fmt.slim[[i]], showlegend = TRUE)
}
plt = plt %>%
layout(title = layr_names,
yaxis = yaxis,
xaxis = date.axis,
legend = list(font = f1, orientation = "h", xanchor = "center", yanchor = "bottom", y = -0.7, x = 0.5),
margin = list(pad = 0, b = 200, l = 0, r = 100, automargin = TRUE))
})
plots6[[5]]
classes.fmt.slim = map(c(increase = "#ff0040", continuous = "#fd8d3c", clearing = "black",
grass = "#009933", agro = "#bf8040"), ~ list(dash="solid", width = 2, color = .x))
classes.fmt.slim$grass$dash = "dash"; classes.fmt.slim$agro$dash = "dash"
plots6 = pmap(list(summary, proper_layernames, proper_layernames.axis, ranges.all),
function(data, layr_names, proper_layernames.axis, ranges.all){
yaxis = y.s1
yaxis$title$text = proper_layernames.axis
yaxis = c(yaxis, range = ranges.all)
# stack lines up
plt = plot_ly(width = 700, height = 500)
for (i in length(classnames):1){
plt = add_lines(plt, data = data[[i]], x ~ date, y ~ med_smooth, name = classnames[i], line = classes.fmt.slim[[i]], showlegend = TRUE)
}
plt = plt %>%
layout(title = layr_names,
yaxis = yaxis,
xaxis = date.axis,
legend = list(font = f1, orientation = "h", xanchor = "center", yanchor = "bottom", y = -0.7, x = 0.5),
margin = list(pad = 0, b = 200, l = 0, r = 100, automargin = TRUE))
})
plots6[[5]]
# save plots
walk2(plots6, proper_layernames, ~ plotly::orca(.x, file = paste0(plotdir, "Sensors/", .y, ".png"), scale = 3))
walk2(plots6, proper_layernames, ~ htmlwidgets::saveWidget(widget = .x, file = paste0(.y, ".html"), selfcontained = TRUE))
proper_layernames = c("Sentinel-1 VH", "Sentinel-1 VV", "Sentinel-1 VV Coherence", "Sentinel-2 DVI", "Sentinel-2 EVI",
"Sentinel-2 MSAVI", "Sentinel-2 NDVI", "Sentinel-2 REIP", "Sentinel-2 RVI")
proper_layernames.axis = c("S-1 VH [dB]", "S-1 VV [dB]", "S-1 VV Coherence", "S-2 DVI Index", "S-2 EVI Index",
"S-2 MSAVI Index", "S-2 NDVI Index", "S-2 REIP Index", "S-2 RVI Index")
plots6 = pmap(list(summary, proper_layernames, proper_layernames.axis, ranges.all),
function(data, layr_names, proper_layernames.axis, ranges.all){
yaxis = y.s1
yaxis$title$text = proper_layernames.axis
yaxis = c(yaxis, range = ranges.all)
# stack lines up
plt = plot_ly(width = 700, height = 500)
for (i in length(classnames):1){
plt = add_lines(plt, data = data[[i]], x ~ date, y ~ med_smooth, name = classnames[i], line = classes.fmt.slim[[i]], showlegend = TRUE)
}
plt = plt %>%
layout(title = layr_names,
yaxis = yaxis,
xaxis = date.axis,
legend = list(font = f1, orientation = "h", xanchor = "center", yanchor = "bottom", y = -0.7, x = 0.5),
margin = list(pad = 0, b = 200, l = 0, r = 100, automargin = TRUE))
})
plots6[[5]]
# save plots
walk2(plots6, proper_layernames, ~ plotly::orca(.x, file = paste0(plotdir, "Sensors/", .y, ".png"), scale = 3))
walk2(plots6, proper_layernames, ~ htmlwidgets::saveWidget(widget = .x, file = paste0(.y, ".html"), selfcontained = TRUE))
# files in directory
gt.files = list.files("D:/Geodaten/#Jupiter/GEO402/03_develop/extract/", pattern = "extract", full.names = TRUE)
types = map(gt.files, ~ substr(.x, start = 56, stop = 100))
dfs = map(gt.files, ~ readRDS(.x)) %>% `names<-`(types)
dfs
View(dfs)
ex = dfs[[1]][[1]]
ex
ex = dfs[[1]][[1]][[1]]
ex
ex = na.omit(ex)
ggplot(ex) +
geom_line(date, med)
geom_line(aes(date, med)
)
ggplot(ex) +
geom_line(aes(date, med))
ex = dfs[[1]][[1]]
map(ex, ~ ggplot(.x) +
geom_line(aes(date, med)))
map(ex, ~ ggplot(.x) +
geom_line(aes(date, med)) +
geom_line(aes(date ,med_smooth)))
source('D:/Geodaten/Master/projects/402slangbos/plotting/#plotting_cross-plots.R', echo=TRUE)
summary[["vh"]]
# READ IN ----------------------------------------------------------------------
dat = readRDS(paste0(dstdir, "summary_statistics.RDS"))
# clean data from NA (possible step in between)
summary = map(dat, ~ map(.x, function(x){
na.omit(x)
})
)
data = summary[["vh"]]
View(data)
plot_ly() %>%
add_lines(data[[1]][[1]]$date, data[[1]][[1]]$median)
data[[1]][[1]]
data[[1]]
plot_ly() %>%
add_lines(data[[1]]$date, data[[1]]$median)
plot_ly() %>%
add_lines(data[[2]]$date, data[[2]]$median)
plot_ly() %>%
add_markers(data[[1]]$median, data[[2]]$median)
View(data)
data
map2(summary, classnames, ~ `names<-`(.x, .y))
summary
data = map2(summary[["vh"]], classnames, ~ `names<-`(.x, .y))
data
View(data)
data = summary[["vh"]] %>% `names<-`(classnames)
plot_ly() %>%
add_markers(data[[1]]$median, data[[2]]$median)
View(data)
plot_ly() %>%
add_markers(data[[1]]$median, data[[2]]$median, showLegend = T)
plot_ly() %>%
add_markers(data[[1]]$median, data[[2]]$median, showlegend = T)
plot_ly() %>%
add_markers(data[["Slangbos Increase"]]$median, data[[2]]$median)
plot_ly() %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Continuous"]]$median)
plot_ly() %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Continuous"]]$median) %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Clearning"]]$median)
plot_ly() %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Continuous"]]$median, name = "Increase x Continuous") %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Clearning"]]$median, name = "Increase x Clearning")
plot_ly() %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Continuous"]]$median, name = "Increase x Continuous") %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Clearning"]]$median, name = "Increase x Clearning") %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Grassland"]]$median, name = "Increase x Grassland")
plot_ly() %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Continuous"]]$median, name = "Increase x Continuous") %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Clearning"]]$median, name = "Increase x Clearning") %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Grassland"]]$median, name = "Increase x Grassland")
plot_ly() %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Continuous"]]$median, name = "Increase x Continuous") %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Clearning"]]$median, name = "Increase x Clearning") %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Grassland"]]$median, name = "Increase x Grassland") %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Cultivated"]]$median, name = "Increase x Cultivated")
plot_ly() %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Continuous"]]$median, name = "Increase x Continuous") %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Clearning"]]$median, name = "Increase x Clearning") %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Grassland"]]$median, name = "Increase x Grassland") %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Cultivated"]]$median, name = "Increase x Cultivated")
View(data)
options(max.print=9999999)
View(data)
data[["Slangbos Increase"]][["median"]]
data[["Cultivated"]][["median"]]
data[["Cultivated"]][["date"]]
data[["Slangbos Increase"]][["date"]]
View(summary)
data$Grassland
data$Grassland$date
diff(data$Grassland$date, data$`Slangbos Increase`$date
diff(data$Grassland$date, data$`Slangbos Increase`$date)
setdiff(data$Grassland$date, data$`Slangbos Increase`$date)
diff.Date(data$Grassland$date, data$`Slangbos Increase`$date)
data$`Slangbos Increase`$date
diff(data$Grassland$date)
diff.Datef(data$Grassland$date)
diff.Date(data$Grassland$date)
a = data$`Slangbos Increase`$date
b = data$Grassland$date
unique(b[! b %in% a])
unique(b[b %in% a])
a = data$`Slangbos Increase`$date
b = data$Cultivated$date
unique(b[b %in% a])
unique(b[!b %in% a])
length(a)
length(a);length(b)
unique(b[!b %in% a])
b[!b %in% a]
b %in% a
unique(a[!a %in% b])
setdiff(a, b)
data
options(max.print=50)
data
# READ IN ----------------------------------------------------------------------
dat = readRDS(paste0(dstdir, "summary_statistics.RDS"))
data = dat[["vh"]] %>% `names<-`(classnames)
diff.Date(data$Grassland$date)
a = data$`Slangbos Increase`$date
b = data$Cultivated$date
setdiff(a, b)
length(a);length(b)
unique(a[!a %in% b])
plot_ly() %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Continuous"]]$median, name = "Increase x Continuous") %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Clearning"]]$median, name = "Increase x Clearning") %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Grassland"]]$median, name = "Increase x Grassland") %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Cultivated"]]$median, name = "Increase x Cultivated")
plot_ly() %>%
add_markers(data[["Slangbos Increase"]]$med_smooth, data[["Slangbos Continuous"]]$med_smooth, name = "Increase x Continuous")
plot_ly() %>%
add_markers(data[["Slangbos Increase"]]$mean, data[["Slangbos Continuous"]]$med_smooth, name = "Increase x Continuous")
plot_ly() %>%
add_markers(data[["Slangbos Increase"]]$mean, data[["Slangbos Continuous"]]$mean, name = "Increase x Continuous")
plot_ly() %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Continuous"]]$median, name = "Increase x Continuous")
data
plot_ly() %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Increase"]]$count, name = "Increase x Continuous")
plot_ly() %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Increase"]]$count, name = "count dependence")
plot_ly() %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Increase"]]$count, name = "count dependence")
plot_ly() %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Continuous"]]$median, name = "Increase x Continuous") %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Clearning"]]$median, name = "Increase x Clearning") %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Grassland"]]$median, name = "Increase x Grassland")
marker = list(size = 1)
plot_ly() %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Continuous"]]$median, name = "Increase x Continuous", marker = marker) %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Clearning"]]$median, name = "Increase x Clearning", marker = marker) %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Grassland"]]$median, name = "Increase x Grassland", marker = marker) %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Cultivated"]]$median, name = "Increase x Cultivated", marker = marker)
marker = list(size = 5)
plot_ly() %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Continuous"]]$median, name = "Increase x Continuous", marker = marker) %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Clearning"]]$median, name = "Increase x Clearning", marker = marker) %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Grassland"]]$median, name = "Increase x Grassland", marker = marker) %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Cultivated"]]$median, name = "Increase x Cultivated", marker = marker)
marker = list(size = 3)
plot_ly() %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Continuous"]]$median, name = "Increase x Continuous", marker = marker) %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Clearning"]]$median, name = "Increase x Clearning", marker = marker) %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Grassland"]]$median, name = "Increase x Grassland", marker = marker) %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Cultivated"]]$median, name = "Increase x Cultivated", marker = marker)
plot_ly() %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Continuous"]]$median, name = "Increase x Continuous", opacity = 0.5,marker = marker) %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Clearning"]]$median, name = "Increase x Clearning", marker = marker) %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Grassland"]]$median, name = "Increase x Grassland", marker = marker) %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Cultivated"]]$median, name = "Increase x Cultivated", marker = marker)
plot_ly() %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Continuous"]]$median, name = "Increase x Continuous", opacity = 0.5,marker = marker) %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Clearning"]]$median, name = "Increase x Clearning", opacity = 0.5,marker = marker) %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Grassland"]]$median, name = "Increase x Grassland", opacity = 0.5,marker = marker) %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Cultivated"]]$median, name = "Increase x Cultivated", opacity = 0.5,marker = marker)
marker = list(size = 30)
plot_ly() %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Continuous"]]$median, name = "Increase x Continuous", opacity = 0.5,marker = marker) %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Clearning"]]$median, name = "Increase x Clearning", opacity = 0.5,marker = marker) %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Grassland"]]$median, name = "Increase x Grassland", opacity = 0.5,marker = marker) %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Cultivated"]]$median, name = "Increase x Cultivated", opacity = 0.5,marker = marker)
marker = list(size = 10)
plot_ly() %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Continuous"]]$median, name = "Increase x Continuous", opacity = 0.5,marker = marker) %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Clearning"]]$median, name = "Increase x Clearning", opacity = 0.5,marker = marker) %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Grassland"]]$median, name = "Increase x Grassland", opacity = 0.5,marker = marker) %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Cultivated"]]$median, name = "Increase x Cultivated", opacity = 0.5,marker = marker)
marker = list(size = 5)
plot_ly() %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Continuous"]]$median, name = "Increase x Continuous", opacity = 0.5,marker = marker) %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Clearning"]]$median, name = "Increase x Clearning", opacity = 0.5,marker = marker) %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Grassland"]]$median, name = "Increase x Grassland", opacity = 0.5,marker = marker) %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Cultivated"]]$median, name = "Increase x Cultivated", opacity = 0.5,marker = marker)
plot_ly() %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Cultivated"]]$median, name = "Increase x Cultivated", opacity = 0.5,marker = marker) %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Grassland"]]$median, name = "Increase x Grassland", opacity = 0.5,marker = marker) %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Clearning"]]$median, name = "Increase x Clearning", opacity = 0.5,marker = marker) %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Continuous"]]$median, name = "Increase x Continuous", opacity = 0.5,marker = marker)
plot_ly() %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Cultivated"]]$median, name = "Increase x Cultivated", opacity = 0.7,marker = marker) %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Grassland"]]$median, name = "Increase x Grassland", opacity = 0.7,marker = marker) %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Clearning"]]$median, name = "Increase x Clearning", opacity = 0.7,marker = marker) %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Continuous"]]$median, name = "Increase x Continuous", opacity = 0.7,marker = marker)
plot_ly() %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Cultivated"]]$median, name = "Increase x Cultivated", opacity = 0.7,marker = marker) %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Grassland"]]$median, name = "Increase x Grassland", opacity = 0.7,marker = marker) %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Clearning"]]$median, name = "Increase x Clearning", opacity = 0.7,marker = marker) %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Continuous"]]$median, name = "Increase x Continuous", opacity = 0.7,marker = marker) %>%
layout(title = "Sentinel-1 VH")
plot_ly() %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Cultivated"]]$median, name = "Increase x Cultivated", opacity = 0.7,marker = marker) %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Grassland"]]$median, name = "Increase x Grassland", opacity = 0.7,marker = marker) %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Clearning"]]$median, name = "Increase x Clearning", opacity = 0.7,marker = marker) %>%
add_markers(data[["Slangbos Increase"]]$median, data[["Slangbos Continuous"]]$median, name = "Increase x Continuous", opacity = 0.7,marker = marker) %>%
layout(title = "Sentinel-1 VH classwise data aggregation")
