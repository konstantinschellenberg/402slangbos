})
# iterate over indizes
pmap(list(indizes, indizesnames, ranges), function(index, i_names, ranges){
print(i_names)
# interate over classes
pmap(list(vh, index, classnames), function(vh, index, classnames){
print(classnames)
plot_ly(width = 700, height = 500) %>%
add_lines(data = vh, x = ~ date, y = ~ med_smooth,
yaxis = "y1", name = "S-1 VH backscatter smoothed", line = vh.fmt) %>%
add_lines(data = index, x = ~ date, y = ~ med_smooth,
yaxis = "y2", name = i_names, line = ndvi.fmt,
connectgaps = F) %>%
add_ribbons(data = vh, x = ~date, ymin = ~losd_smooth, ymax = ~upsd_smooth,
yaxis = "y1", name = "S-1 VH standard deviation range (1 sigma)",
color = I(blue_background), line = list(width = 1), opacity = 0.3,
showlegend = T) %>%
add_ribbons(data = ndvi, x = ~date, ymin = ~losd_smooth, ymax = ~upsd_smooth,
yaxis = "y2", name = "NDVI standard deviation range (1 sigma)",
color = I(red_background), line = list(width = 1), opacity = 0.3,
showlegend = T) %>%
layout(xaxis = x,
yaxis = c(y.s1, range = list(c(min, max))),
yaxis2 = c(y.indizes, range = range, title = i_names),
legend = list(font = f1, orientation = "h", xanchor = "center", yanchor = "bottom", y = -0.7, x = 0.5),
margin = list(pad = 0, b = 200, l = 0, r = 100, automargin = TRUE),
title = classnames)
})
index
# iterate over indizes
pmap(list(indizes, indizesnames, ranges), function(index, i_names, ranges){
print(i_names)
# iterate over classes
pmap(list(vh, index, classnames), function(vh, index, classnames){
print(classnames)
plot_ly(width = 700, height = 500) %>%
add_lines(data = vh, x = ~ date, y = ~ med_smooth,
yaxis = "y1", name = "S-1 VH backscatter smoothed", line = vh.fmt) %>%
add_lines(data = index, x = ~ date, y = ~ med_smooth,
yaxis = "y2", name = i_names, line = ndvi.fmt,
connectgaps = F) %>%
add_ribbons(data = vh, x = ~date, ymin = ~losd_smooth, ymax = ~upsd_smooth,
yaxis = "y1", name = "S-1 VH standard deviation range (1 sigma)",
color = I(blue_background), line = list(width = 1), opacity = 0.3,
showlegend = T) %>%
add_ribbons(data = index, x = ~date, ymin = ~losd_smooth, ymax = ~upsd_smooth,
yaxis = "y2", name = i_names,
color = I(red_background), line = list(width = 1), opacity = 0.3,
showlegend = T) %>%
layout(xaxis = x,
yaxis = c(y.s1, range = list(c(min, max))),
yaxis2 = c(y.indizes, range = range, title = i_names),
legend = list(font = f1, orientation = "h", xanchor = "center", yanchor = "bottom", y = -0.7, x = 0.5),
margin = list(pad = 0, b = 200, l = 0, r = 100, automargin = TRUE),
title = classnames)
})
indizesnames
casefold(indizesnames, upper = T)
uppercase = casefold(indizesnames, upper = T)
index_axis = paste("S-2", uppercase, "smoothed")
index_axis
index_axis = paste("S-2", uppercase, "index smoothed")
index_axis
y.indizes
range
# VH in comparison with S2 indizes
s.plt4 = function(vh, indizes, classnames){
# INFO:
# indizes are a list of index data.frames
ranges = map(indizes, function(x){
max = map_dbl(x, ~ max(.x$median)) %>% max()
min = map_dbl(x, ~ min(.x$median)) %>% min()
range = list(c(min, max))
})
# save indizes' name
indizesnames = names(indizes)
print(indizesnames)
# concat axis literates
uppercase = casefold(indizesnames, upper = T)
index_axis = paste("S-2", uppercase, "index smoothed")
# iterate over indizes
pmap(list(indizes, indizesnames, ranges), function(index, i_names, ranges){
print(i_names)
# iterate over classes
pmap(list(vh, index, classnames), function(vh, index, classnames){
print(classnames)
plot_ly(width = 700, height = 500) %>%
add_lines(data = vh, x = ~ date, y = ~ med_smooth,
yaxis = "y1", name = "S-1 VH backscatter smoothed", line = vh.fmt) %>%
add_lines(data = index, x = ~ date, y = ~ med_smooth,
yaxis = "y2", name = i_names, line = ndvi.fmt,
connectgaps = F) %>%
add_ribbons(data = vh, x = ~date, ymin = ~losd_smooth, ymax = ~upsd_smooth,
yaxis = "y1", name = "S-1 VH standard deviation range (1 sigma)",
color = I(blue_background), line = list(width = 1), opacity = 0.3,
showlegend = T) %>%
add_ribbons(data = index, x = ~date, ymin = ~losd_smooth, ymax = ~upsd_smooth,
yaxis = "y2", name = i_names,
color = I(red_background), line = list(width = 1), opacity = 0.3,
showlegend = T) %>%
layout(xaxis = x,
yaxis = c(y.s1, range = list(c(min, max))),
yaxis2 = c(y.indizes, range = range, title = index_axis),
legend = list(font = f1, orientation = "h", xanchor = "center", yanchor = "bottom", y = -0.7, x = 0.5),
margin = list(pad = 0, b = 200, l = 0, r = 100, automargin = TRUE),
title = classnames)
})
}
# iterate over indizes
pmap(list(indizes, indizesnames, ranges), function(index, i_names, ranges){
print(i_names)
# iterate over classes
pmap(list(vh, index, classnames), function(vh, index, classnames){
print(classnames)
plot_ly(width = 700, height = 500) %>%
add_lines(data = vh, x = ~ date, y = ~ med_smooth,
yaxis = "y1", name = "S-1 VH backscatter smoothed", line = vh.fmt) %>%
add_lines(data = index, x = ~ date, y = ~ med_smooth,
yaxis = "y2", name = i_names, line = ndvi.fmt,
connectgaps = F) %>%
add_ribbons(data = vh, x = ~date, ymin = ~losd_smooth, ymax = ~upsd_smooth,
yaxis = "y1", name = "S-1 VH standard deviation range (1 sigma)",
color = I(blue_background), line = list(width = 1), opacity = 0.3,
showlegend = T) %>%
add_ribbons(data = index, x = ~date, ymin = ~losd_smooth, ymax = ~upsd_smooth,
yaxis = "y2", name = i_names,
color = I(red_background), line = list(width = 1), opacity = 0.3,
showlegend = T) %>%
layout(xaxis = x,
yaxis = c(y.s1, range = list(c(min, max))),
yaxis2 = c(y.indizes, range = range, title = index_axis),
legend = list(font = f1, orientation = "h", xanchor = "center", yanchor = "bottom", y = -0.7, x = 0.5),
margin = list(pad = 0, b = 200, l = 0, r = 100, automargin = TRUE),
title = classnames)
})
y.indizes <- list(
titlefont = f2,
tickfont = f1,
showline = F,
overlaying = "y",
side = "right",
anchor = "free",
position = 1)
# iterate over indizes
pmap(list(indizes, indizesnames, ranges), function(index, i_names, ranges){
print(i_names)
# iterate over classes
pmap(list(vh, index, classnames), function(vh, index, classnames){
print(classnames)
plot_ly(width = 700, height = 500) %>%
add_lines(data = vh, x = ~ date, y = ~ med_smooth,
yaxis = "y1", name = "S-1 VH backscatter smoothed", line = vh.fmt) %>%
add_lines(data = index, x = ~ date, y = ~ med_smooth,
yaxis = "y2", name = i_names, line = ndvi.fmt,
connectgaps = F) %>%
add_ribbons(data = vh, x = ~date, ymin = ~losd_smooth, ymax = ~upsd_smooth,
yaxis = "y1", name = "S-1 VH standard deviation range (1 sigma)",
color = I(blue_background), line = list(width = 1), opacity = 0.3,
showlegend = T) %>%
add_ribbons(data = index, x = ~date, ymin = ~losd_smooth, ymax = ~upsd_smooth,
yaxis = "y2", name = i_names,
color = I(red_background), line = list(width = 1), opacity = 0.3,
showlegend = T) %>%
layout(xaxis = x,
yaxis = c(y.s1, range = list(c(min, max))),
yaxis2 = c(y.indizes, range = range, title = index_axis),
legend = list(font = f1, orientation = "h", xanchor = "center", yanchor = "bottom", y = -0.7, x = 0.5),
margin = list(pad = 0, b = 200, l = 0, r = 100, automargin = TRUE),
title = classnames)
})
# iterate over indizes
pmap(list(indizes, indizesnames, ranges), function(index, i_names, ranges){
print(i_names)
# iterate over classes
pmap(list(vh, index, classnames), function(vh, index, classnames){
print(classnames)
plot_ly(width = 700, height = 500) %>%
add_lines(data = vh, x = ~ date, y = ~ med_smooth,
yaxis = "y1", name = "S-1 VH backscatter smoothed", line = vh.fmt) %>%
add_lines(data = index, x = ~ date, y = ~ med_smooth,
yaxis = "y2", name = index_axis, line = ndvi.fmt,
connectgaps = F) %>%
add_ribbons(data = vh, x = ~date, ymin = ~losd_smooth, ymax = ~upsd_smooth,
yaxis = "y1", name = "S-1 VH standard deviation range (1 sigma)",
color = I(blue_background), line = list(width = 1), opacity = 0.3,
showlegend = T) %>%
add_ribbons(data = index, x = ~date, ymin = ~losd_smooth, ymax = ~upsd_smooth,
yaxis = "y2", name = paste(index_axis, "standard deviation range (1 sigma)",
color = I(red_background), line = list(width = 1), opacity = 0.3,
showlegend = T) %>%
layout(xaxis = x,
yaxis = c(y.s1, range = list(c(min, max))),
yaxis2 = c(y.indizes, range = range, title = index_axis),
legend = list(font = f1, orientation = "h", xanchor = "center", yanchor = "bottom", y = -0.7, x = 0.5),
margin = list(pad = 0, b = 200, l = 0, r = 100, automargin = TRUE),
title = classnames)
})
}
# give named list of indizes
plots4 = s.plt4(summary[["vh"]],
list(evi = summary[["evi"]], ndvi = summary[["ndvi"]], reip = summary[["reip"]]),
classnames)
plots4[[1]]
walk2(plots4, classnames, ~ plotly::orca(.x, file = paste0(summarystats_plotsdir, .y, "_bscVH-cohVV-NDVI.png"), scale = 3))
# iterate over indizes
pmap(list(indizes, indizesnames, ranges), function(index, i_names, ranges){
print(i_names)
# iterate over classes
pmap(list(vh, index, classnames), function(vh, index, classnames){
print(classnames)
plot_ly(width = 700, height = 500) %>%
add_lines(data = vh, x = ~ date, y = ~ med_smooth,
yaxis = "y1", name = "S-1 VH backscatter smoothed", line = vh.fmt) %>%
add_lines(data = index, x = ~ date, y = ~ med_smooth,
yaxis = "y2", name = index_axis, line = ndvi.fmt,
connectgaps = F) %>%
add_ribbons(data = vh, x = ~date, ymin = ~losd_smooth, ymax = ~upsd_smooth,
yaxis = "y1", name = "S-1 VH standard deviation range (1 sigma)",
color = I(blue_background), line = list(width = 1), opacity = 0.3,
showlegend = T) %>%
add_ribbons(data = index, x = ~date, ymin = ~losd_smooth, ymax = ~upsd_smooth,
yaxis = "y2", name = paste(index_axis, "standard deviation range (1 sigma)"),
color = I(red_background), line = list(width = 1), opacity = 0.3,
showlegend = T) %>%
layout(xaxis = x,
yaxis = c(y.s1, range = list(c(min, max))),
yaxis2 = c(y.indizes, range = range, title = index_axis),
legend = list(font = f1, orientation = "h", xanchor = "center", yanchor = "bottom", y = -0.7, x = 0.5),
margin = list(pad = 0, b = 200, l = 0, r = 100, automargin = TRUE),
title = classnames)
})
paste(index_axis, "standard deviation range (1 sigma)")
index_axis
indizesnames
i_names
# iterate over indizes
pmap(list(indizes, index_axis, ranges), function(index, i_names, ranges){
print(i_names)
# iterate over classes
pmap(list(vh, index, classnames), function(vh, index, classnames){
print(classnames)
plot_ly(width = 700, height = 500) %>%
add_lines(data = vh, x = ~ date, y = ~ med_smooth,
yaxis = "y1", name = "S-1 VH backscatter smoothed", line = vh.fmt) %>%
add_lines(data = index, x = ~ date, y = ~ med_smooth,
yaxis = "y2", name = index_axis, line = ndvi.fmt,
connectgaps = F) %>%
add_ribbons(data = vh, x = ~date, ymin = ~losd_smooth, ymax = ~upsd_smooth,
yaxis = "y1", name = "S-1 VH standard deviation range (1 sigma)",
color = I(blue_background), line = list(width = 1), opacity = 0.3,
showlegend = T) %>%
add_ribbons(data = index, x = ~date, ymin = ~losd_smooth, ymax = ~upsd_smooth,
yaxis = "y2", name = paste(index_axis, "standard deviation range (1 sigma)"),
color = I(red_background), line = list(width = 1), opacity = 0.3,
showlegend = T) %>%
layout(xaxis = x,
yaxis = c(y.s1, range = list(c(min, max))),
yaxis2 = c(y.indizes, range = range, title = index_axis),
legend = list(font = f1, orientation = "h", xanchor = "center", yanchor = "bottom", y = -0.7, x = 0.5),
margin = list(pad = 0, b = 200, l = 0, r = 100, automargin = TRUE),
title = classnames)
})
# iterate over indizes
pmap(list(indizes, index_axis, ranges), function(index, i_names, ranges){
print(i_names)
# iterate over classes
pmap(list(vh, index, classnames), function(vh, index, classnames){
print(classnames)
plot_ly(width = 700, height = 500) %>%
add_lines(data = vh, x = ~ date, y = ~ med_smooth,
yaxis = "y1", name = "S-1 VH backscatter smoothed", line = vh.fmt) %>%
add_lines(data = index, x = ~ date, y = ~ med_smooth,
yaxis = "y2", name = i_names, line = ndvi.fmt,
connectgaps = F) %>%
add_ribbons(data = vh, x = ~date, ymin = ~losd_smooth, ymax = ~upsd_smooth,
yaxis = "y1", name = "S-1 VH standard deviation range (1 sigma)",
color = I(blue_background), line = list(width = 1), opacity = 0.3,
showlegend = T) %>%
add_ribbons(data = index, x = ~date, ymin = ~losd_smooth, ymax = ~upsd_smooth,
yaxis = "y2", name = paste(i_names, "standard deviation range (1 sigma)"),
color = I(red_background), line = list(width = 1), opacity = 0.3,
showlegend = T) %>%
layout(xaxis = x,
yaxis = c(y.s1, range = list(c(min, max))),
yaxis2 = c(y.indizes, range = range, title = i_names),
legend = list(font = f1, orientation = "h", xanchor = "center", yanchor = "bottom", y = -0.7, x = 0.5),
margin = list(pad = 0, b = 200, l = 0, r = 100, automargin = TRUE),
title = classnames)
})
# iterate over indizes
pmap(list(indizes, index_axis, ranges), function(index, i_names, ranges){
print(i_names)
# iterate over classes
pmap(list(vh, index, classnames), function(vh, index, classnames){
print(classnames)
plot_ly(width = 700, height = 500) %>%
add_lines(data = vh, x = ~ date, y = ~ med_smooth,
yaxis = "y1", name = "S-1 VH backscatter smoothed", line = vh.fmt) %>%
add_lines(data = index, x = ~ date, y = ~ med_smooth,
yaxis = "y2", name = paste(i_names, "smoothed"), line = ndvi.fmt,
connectgaps = F) %>%
add_ribbons(data = vh, x = ~date, ymin = ~losd_smooth, ymax = ~upsd_smooth,
yaxis = "y1", name = "S-1 VH standard deviation range (1 sigma)",
color = I(blue_background), line = list(width = 1), opacity = 0.3,
showlegend = T) %>%
add_ribbons(data = index, x = ~date, ymin = ~losd_smooth, ymax = ~upsd_smooth,
yaxis = "y2", name = paste(i_names, "standard deviation range (1 sigma)"),
color = I(red_background), line = list(width = 1), opacity = 0.3,
showlegend = T) %>%
layout(xaxis = x,
yaxis = c(y.s1, range = list(c(min, max))),
yaxis2 = c(y.indizes, range = range, title = i_names),
legend = list(font = f1, orientation = "h", xanchor = "center", yanchor = "bottom", y = -0.7, x = 0.5),
margin = list(pad = 0, b = 200, l = 0, r = 100, automargin = TRUE),
title = classnames)
})
# iterate over indizes
pmap(list(indizes, index_axis, ranges), function(index, i_names, ranges){
print(i_names)
# iterate over classes
pmap(list(vh, index, classnames), function(vh, index, classnames){
print(classnames)
plot_ly(width = 700, height = 500) %>%
add_lines(data = vh, x = ~ date, y = ~ med_smooth,
yaxis = "y1", name = "S-1 VH backscatter smoothed", line = vh.fmt) %>%
add_lines(data = index, x = ~ date, y = ~ med_smooth,
yaxis = "y2", name = i_names, line = ndvi.fmt,
connectgaps = F) %>%
add_ribbons(data = vh, x = ~date, ymin = ~losd_smooth, ymax = ~upsd_smooth,
yaxis = "y1", name = "S-1 VH standard deviation range (1 sigma)",
color = I(blue_background), line = list(width = 1), opacity = 0.3,
showlegend = T) %>%
add_ribbons(data = index, x = ~date, ymin = ~losd_smooth, ymax = ~upsd_smooth,
yaxis = "y2", name = paste(i_names, "standard deviation range (1 sigma)"),
color = I(red_background), line = list(width = 1), opacity = 0.3,
showlegend = T) %>%
layout(xaxis = x,
yaxis = c(y.s1, range = list(c(min, max))),
yaxis2 = c(y.indizes, range = range, title = paste(i_names, "smoothed")),
legend = list(font = f1, orientation = "h", xanchor = "center", yanchor = "bottom", y = -0.7, x = 0.5),
margin = list(pad = 0, b = 200, l = 0, r = 100, automargin = TRUE),
title = classnames)
})
ranges = map(indizes, function(x){
max = map_dbl(x, ~ max(.x$median)) %>% max()
min = map_dbl(x, ~ min(.x$median)) %>% min()
range = list(c(min, max))
})
# save indizes' name
indizesnames = names(indizes)
print(indizesnames)
# concat axis literates
uppercase = casefold(indizesnames, upper = T)
index_axis = paste("S-2", uppercase, "index")
# iterate over indizes
pmap(list(indizes, index_axis, ranges), function(index, i_names, ranges){
print(i_names)
# iterate over classes
pmap(list(vh, index, classnames), function(vh, index, classnames){
print(classnames)
plot_ly(width = 700, height = 500) %>%
add_lines(data = vh, x = ~ date, y = ~ med_smooth,
yaxis = "y1", name = "S-1 VH backscatter smoothed", line = vh.fmt) %>%
add_lines(data = index, x = ~ date, y = ~ med_smooth,
yaxis = "y2", name = i_names, line = ndvi.fmt,
connectgaps = F) %>%
add_ribbons(data = vh, x = ~date, ymin = ~losd_smooth, ymax = ~upsd_smooth,
yaxis = "y1", name = "S-1 VH standard deviation range (1 sigma)",
color = I(blue_background), line = list(width = 1), opacity = 0.3,
showlegend = T) %>%
add_ribbons(data = index, x = ~date, ymin = ~losd_smooth, ymax = ~upsd_smooth,
yaxis = "y2", name = paste(i_names, "standard deviation range (1 sigma)"),
color = I(red_background), line = list(width = 1), opacity = 0.3,
showlegend = T) %>%
layout(xaxis = x,
yaxis = c(y.s1, range = list(c(min, max))),
yaxis2 = c(y.indizes, range = range, title = paste(i_names, "smoothed")),
legend = list(font = f1, orientation = "h", xanchor = "center", yanchor = "bottom", y = -0.7, x = 0.5),
margin = list(pad = 0, b = 200, l = 0, r = 100, automargin = TRUE),
title = classnames)
})
# iterate over indizes
pmap(list(indizes, index_axis, ranges), function(index, i_names, ranges){
print(i_names)
# iterate over classes
pmap(list(vh, index, classnames), function(vh, index, classnames){
print(classnames)
plot_ly(width = 700, height = 500) %>%
add_lines(data = vh, x = ~ date, y = ~ med_smooth,
yaxis = "y1", name = "S-1 VH backscatter smoothed", line = vh.fmt) %>%
add_lines(data = index, x = ~ date, y = ~ med_smooth,
yaxis = "y2", name = paste(i_names, "smoothed"), line = ndvi.fmt,
connectgaps = F) %>%
add_ribbons(data = vh, x = ~date, ymin = ~losd_smooth, ymax = ~upsd_smooth,
yaxis = "y1", name = "S-1 VH standard deviation range (1 sigma)",
color = I(blue_background), line = list(width = 1), opacity = 0.3,
showlegend = T) %>%
add_ribbons(data = index, x = ~date, ymin = ~losd_smooth, ymax = ~upsd_smooth,
yaxis = "y2", name = paste(i_names, "standard deviation range (1 sigma)"),
color = I(red_background), line = list(width = 1), opacity = 0.3,
showlegend = T) %>%
layout(xaxis = x,
yaxis = c(y.s1, range = list(c(min, max))),
yaxis2 = c(y.indizes, range = range, title = i_names)
legend = list(font = f1, orientation = "h", xanchor = "center", yanchor = "bottom", y = -0.7, x = 0.5),
margin = list(pad = 0, b = 200, l = 0, r = 100, automargin = TRUE),
title = classnames)
})
# iterate over indizes
pmap(list(indizes, index_axis, ranges), function(index, i_names, ranges){
print(i_names)
# iterate over classes
pmap(list(vh, index, classnames), function(vh, index, classnames){
print(classnames)
plot_ly(width = 700, height = 500) %>%
add_lines(data = vh, x = ~ date, y = ~ med_smooth,
yaxis = "y1", name = "S-1 VH backscatter smoothed", line = vh.fmt) %>%
add_lines(data = index, x = ~ date, y = ~ med_smooth,
yaxis = "y2", name = paste(i_names, "smoothed"), line = ndvi.fmt,
connectgaps = F) %>%
add_ribbons(data = vh, x = ~date, ymin = ~losd_smooth, ymax = ~upsd_smooth,
yaxis = "y1", name = "S-1 VH standard deviation range (1 sigma)",
color = I(blue_background), line = list(width = 1), opacity = 0.3,
showlegend = T) %>%
add_ribbons(data = index, x = ~date, ymin = ~losd_smooth, ymax = ~upsd_smooth,
yaxis = "y2", name = paste(i_names, "standard deviation range (1 sigma)"),
color = I(red_background), line = list(width = 1), opacity = 0.3,
showlegend = T) %>%
layout(xaxis = x,
yaxis = c(y.s1, range = list(c(min, max))),
yaxis2 = c(y.indizes, range = range, title = i_names),
legend = list(font = f1, orientation = "h", xanchor = "center", yanchor = "bottom", y = -0.7, x = 0.5),
margin = list(pad = 0, b = 200, l = 0, r = 100, automargin = TRUE),
title = classnames)
})
# give named list of indizes
plots4 = s.plt4(summary[["vh"]],
list(evi = summary[["evi"]], ndvi = summary[["ndvi"]], reip = summary[["reip"]],
msavi = summary[["msavi"]], dvi = summary[["dvi"]], rvi = summary[["rvi"]]),
classnames)
# VH in comparison with S2 indizes
s.plt4 = function(vh, indizes, classnames){
# INFO:
# indizes are a list of index data.frames
ranges = map(indizes, function(x){
max = map_dbl(x, ~ max(.x$median)) %>% max()
min = map_dbl(x, ~ min(.x$median)) %>% min()
range = list(c(min, max))
})
# save indizes' name
indizesnames = names(indizes)
print(indizesnames)
# concat axis literates
uppercase = casefold(indizesnames, upper = T)
index_axis = paste("S-2", uppercase, "index")
# iterate over indizes
pmap(list(indizes, index_axis, ranges), function(index, i_names, ranges){
print(i_names)
# iterate over classes
pmap(list(vh, index, classnames), function(vh, index, classnames){
print(classnames)
plot_ly(width = 700, height = 500) %>%
add_lines(data = vh, x = ~ date, y = ~ med_smooth,
yaxis = "y1", name = "S-1 VH backscatter smoothed", line = vh.fmt) %>%
add_lines(data = index, x = ~ date, y = ~ med_smooth,
yaxis = "y2", name = paste(i_names, "smoothed"), line = ndvi.fmt,
connectgaps = F) %>%
add_ribbons(data = vh, x = ~date, ymin = ~losd_smooth, ymax = ~upsd_smooth,
yaxis = "y1", name = "S-1 VH standard deviation range (1 sigma)",
color = I(blue_background), line = list(width = 1), opacity = 0.3,
showlegend = T) %>%
add_ribbons(data = index, x = ~date, ymin = ~losd_smooth, ymax = ~upsd_smooth,
yaxis = "y2", name = paste(i_names, "standard deviation range (1 sigma)"),
color = I(red_background), line = list(width = 1), opacity = 0.3,
showlegend = T) %>%
layout(xaxis = x,
yaxis = c(y.s1, range = list(c(min, max))),
yaxis2 = c(y.indizes, range = range, title = i_names),
legend = list(font = f1, orientation = "h", xanchor = "center", yanchor = "bottom", y = -0.7, x = 0.5),
margin = list(pad = 0, b = 200, l = 0, r = 100, automargin = TRUE),
title = classnames)
})
}
# give named list of indizes
plots4 = s.plt4(summary[["vh"]],
list(evi = summary[["evi"]], ndvi = summary[["ndvi"]], reip = summary[["reip"]],
msavi = summary[["msavi"]], dvi = summary[["dvi"]], rvi = summary[["rvi"]]),
classnames)
plots4[[1]]
summarystats_plotsdir
# give named list of indizes
indizes = list(evi = summary[["evi"]], ndvi = summary[["ndvi"]], reip = summary[["reip"]],
msavi = summary[["msavi"]], dvi = summary[["dvi"]], rvi = summary[["rvi"]])
indizes
names(indizes)
plots4
i_name
i_name = names(indizes)
summarystats_plotsdir
plots4[[1]][[1]]
# save iteratively
map2(plots4, i_name, function(plots, i_name){
print(i_name)
pwalk(list(plots, classnames, i_name), function(x, y, z){
plotly::orca(x, file = paste0(summarystats_plotsdir, "indizes/", y, "_bscVH-cohVV-", i_name, ".png"), scale = 3)
})
# save iteratively
map2(plots4, i_name, function(plots, i_name){
print(i_name)
pwalk(list(plots, classnames, i_name), function(x, y, z){
plotly::orca(x, file = paste0(summarystats_plotsdir, "indizes/", y, "_bscVH-", i_name, ".png"), scale = 3)
})
